{"ast":null,"code":"var _jsxFileName = \"/Users/aminforout/Desktop/projects/project9/client/src/components/Timer/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport explosionIcon from \"../Timer/explosion.png\";\nimport \"../../scss/components/Timer.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CountdownTimer() {\n  _s();\n  const [timer, setTimer] = useState(48 * 60 * 60); // Initial timer value in seconds (48 hours)\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (timer > 0) {\n        setTimer(timer - 1); // Decrement the timer by 1 second\n      }\n    }, 1000); // Run the interval every 1 second (1000 milliseconds)\n\n    // Cleanup the interval when the component unmounts\n    return () => clearInterval(interval);\n  }, [timer]);\n\n  // Convert the remaining seconds into hours, minutes, and seconds\n  const hours = Math.floor(timer / 3600);\n  const minutes = Math.floor(timer % 3600 / 60);\n  const seconds = timer % 60;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-dark text-white p-3 d-flex justify-content-center align-items-center \",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: explosionIcon,\n      alt: \"explosion icon\",\n      className: \"explosionicon p-2 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" Sales \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), \" \", hours, \" hours, \", minutes, \" minutes, \", seconds, \" seconds remaining\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" Sales\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: explosionIcon,\n      alt: \"explosion icon\",\n      className: \"explosionicon p-2 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(CountdownTimer, \"8Bk8lPZ5kCWAKf/aP7YwazOwyfk=\");\n_c = CountdownTimer;\nexport default CountdownTimer;\nvar _c;\n$RefreshReg$(_c, \"CountdownTimer\");","map":{"version":3,"names":["React","useState","useEffect","explosionIcon","jsxDEV","_jsxDEV","CountdownTimer","_s","timer","setTimer","interval","setInterval","clearInterval","hours","Math","floor","minutes","seconds","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aminforout/Desktop/projects/project9/client/src/components/Timer/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport explosionIcon from \"../Timer/explosion.png\";\nimport \"../../scss/components/Timer.scss\";\nfunction CountdownTimer() {\n  const [timer, setTimer] = useState(48 * 60 * 60); // Initial timer value in seconds (48 hours)\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (timer > 0) {\n        setTimer(timer - 1); // Decrement the timer by 1 second\n      }\n    }, 1000); // Run the interval every 1 second (1000 milliseconds)\n\n    // Cleanup the interval when the component unmounts\n    return () => clearInterval(interval);\n  }, [timer]);\n\n  // Convert the remaining seconds into hours, minutes, and seconds\n  const hours = Math.floor(timer / 3600);\n  const minutes = Math.floor((timer % 3600) / 60);\n  const seconds = timer % 60;\n\n  return (\n    <div className=\"bg-dark text-white p-3 d-flex justify-content-center align-items-center \">\n      <img\n        src={explosionIcon}\n        alt=\"explosion icon\"\n        className=\"explosionicon p-2 \"\n      ></img>\n      <p>\n        <span> Sales </span> {hours} hours, {minutes} minutes, {seconds} seconds\n        remaining<span> Sales</span>\n      </p>\n      <img\n        src={explosionIcon}\n        alt=\"explosion icon\"\n        className=\"explosionicon p-2 \"\n      ></img>\n    </div>\n  );\n}\n\nexport default CountdownTimer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,wBAAwB;AAClD,OAAO,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1C,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;;EAElDC,SAAS,CAAC,MAAM;IACd,MAAMQ,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC,IAAIH,KAAK,GAAG,CAAC,EAAE;QACbC,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;MACvB;IACF,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEV;IACA,OAAO,MAAMI,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACF,KAAK,CAAC,CAAC;;EAEX;EACA,MAAMK,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACP,KAAK,GAAG,IAAI,CAAC;EACtC,MAAMQ,OAAO,GAAGF,IAAI,CAACC,KAAK,CAAEP,KAAK,GAAG,IAAI,GAAI,EAAE,CAAC;EAC/C,MAAMS,OAAO,GAAGT,KAAK,GAAG,EAAE;EAE1B,oBACEH,OAAA;IAAKa,SAAS,EAAC,0EAA0E;IAAAC,QAAA,gBACvFd,OAAA;MACEe,GAAG,EAAEjB,aAAc;MACnBkB,GAAG,EAAC,gBAAgB;MACpBH,SAAS,EAAC;IAAoB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACPpB,OAAA;MAAAc,QAAA,gBACEd,OAAA;QAAAc,QAAA,EAAM;MAAO;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,KAAC,EAACZ,KAAK,EAAC,UAAQ,EAACG,OAAO,EAAC,YAAU,EAACC,OAAO,EAAC,oBACvD,eAAAZ,OAAA;QAAAc,QAAA,EAAM;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,eACJpB,OAAA;MACEe,GAAG,EAAEjB,aAAc;MACnBkB,GAAG,EAAC,gBAAgB;MACpBH,SAAS,EAAC;IAAoB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAClB,EAAA,CArCQD,cAAc;AAAAoB,EAAA,GAAdpB,cAAc;AAuCvB,eAAeA,cAAc;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}