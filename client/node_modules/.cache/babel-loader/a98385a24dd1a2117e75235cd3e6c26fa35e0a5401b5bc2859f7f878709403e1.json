{"ast":null,"code":"var _jsxFileName = \"/Users/aminforout/Desktop/projects/project5/client/src/components/CategoryMenu/index.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import { useQuery } from \"@apollo/client\";\n// import { useStoreContext } from \"../../utils/GlobalState\";\n// import {\n//   UPDATE_CATEGORIES,\n//   UPDATE_CURRENT_CATEGORY,\n// } from \"../../utils/actions\";\n// import { QUERY_CATEGORIES } from \"../../utils/queries\";\n// import { idbPromise } from \"../../utils/helpers\";\n// import \"../../scss/components/CategoryMenu.scss\";\n// function CategoryMenu() {\n//   const [state, dispatch] = useStoreContext();\n\n//   const { categories } = state;\n\n//   const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n//   useEffect(() => {\n//     if (categoryData) {\n//       dispatch({\n//         type: UPDATE_CATEGORIES,\n//         categories: categoryData.categories,\n//       });\n//       categoryData.categories.forEach((category) => {\n//         idbPromise(\"categories\", \"put\", category);\n//       });\n//     } else if (!loading) {\n//       idbPromise(\"categories\", \"get\").then((categories) => {\n//         dispatch({\n//           type: UPDATE_CATEGORIES,\n//           categories: categories,\n//         });\n//       });\n//     }\n//   }, [categoryData, loading, dispatch]);\n\n//   const handleClick = (id) => {\n//     dispatch({\n//       type: UPDATE_CURRENT_CATEGORY,\n//       currentCategory: id,\n//     });\n//   };\n\n//   return (\n//     <div>\n//       <div className=\"CategoryMenu-container d-flex justify-content-center align-items-center m-5 hstack gap-5\">\n//         {categories.map((item) => (\n//           <Link to=\"/ProductList\">\n//             <button\n//               key={item._id}\n//               onClick={() => {\n//                 handleClick(item._id);\n//               }}\n//               className=\"CategoryMenu-container-button p-5 m-5 \"\n//             >\n//               {item.name}\n//             </button>\n//           </Link>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n// export default CategoryMenu;\nimport React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from \"../../utils/actions\";\nimport { QUERY_CATEGORIES } from \"../../utils/queries\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport \"../../scss/components/CategoryMenu.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CategoryMenu() {\n  _s();\n  const [state, dispatch] = useStoreContext();\n  const {\n    categories\n  } = state;\n  const {\n    loading,\n    data: categoryData\n  } = useQuery(QUERY_CATEGORIES);\n  useEffect(() => {\n    if (categoryData && categoryData.categories) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories\n      });\n      if (categoryData.categories.length > 0) {\n        categoryData.categories.forEach(category => {\n          idbPromise(\"categories\", \"put\", category);\n        });\n      }\n    } else if (!loading) {\n      idbPromise(\"categories\", \"get\").then(categories => {\n        if (categories && categories.length > 0) {\n          dispatch({\n            type: UPDATE_CATEGORIES,\n            categories: categories\n          });\n        }\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n  const handleClick = id => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CategoryMenu-container d-flex justify-content-center align-items-center m-5 hstack gap-5\",\n      children: categories.map(item => /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/ProductList\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            handleClick(item._id);\n          },\n          className: \"CategoryMenu-container-button p-5 m-5 \",\n          children: item.name\n        }, item._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)\n      }, item._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(CategoryMenu, \"dVCQPHAWx2znearw0XIiXyA+Ei0=\", false, function () {\n  return [useStoreContext, useQuery];\n});\n_c = CategoryMenu;\nexport default CategoryMenu;\nvar _c;\n$RefreshReg$(_c, \"CategoryMenu\");","map":{"version":3,"names":["React","useEffect","Link","useQuery","useStoreContext","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","QUERY_CATEGORIES","idbPromise","jsxDEV","_jsxDEV","CategoryMenu","_s","state","dispatch","categories","loading","data","categoryData","type","length","forEach","category","then","handleClick","id","currentCategory","children","className","map","item","to","onClick","_id","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aminforout/Desktop/projects/project5/client/src/components/CategoryMenu/index.js"],"sourcesContent":["// import React, { useEffect } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import { useQuery } from \"@apollo/client\";\n// import { useStoreContext } from \"../../utils/GlobalState\";\n// import {\n//   UPDATE_CATEGORIES,\n//   UPDATE_CURRENT_CATEGORY,\n// } from \"../../utils/actions\";\n// import { QUERY_CATEGORIES } from \"../../utils/queries\";\n// import { idbPromise } from \"../../utils/helpers\";\n// import \"../../scss/components/CategoryMenu.scss\";\n// function CategoryMenu() {\n//   const [state, dispatch] = useStoreContext();\n\n//   const { categories } = state;\n\n//   const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n//   useEffect(() => {\n//     if (categoryData) {\n//       dispatch({\n//         type: UPDATE_CATEGORIES,\n//         categories: categoryData.categories,\n//       });\n//       categoryData.categories.forEach((category) => {\n//         idbPromise(\"categories\", \"put\", category);\n//       });\n//     } else if (!loading) {\n//       idbPromise(\"categories\", \"get\").then((categories) => {\n//         dispatch({\n//           type: UPDATE_CATEGORIES,\n//           categories: categories,\n//         });\n//       });\n//     }\n//   }, [categoryData, loading, dispatch]);\n\n//   const handleClick = (id) => {\n//     dispatch({\n//       type: UPDATE_CURRENT_CATEGORY,\n//       currentCategory: id,\n//     });\n//   };\n\n//   return (\n//     <div>\n//       <div className=\"CategoryMenu-container d-flex justify-content-center align-items-center m-5 hstack gap-5\">\n//         {categories.map((item) => (\n//           <Link to=\"/ProductList\">\n//             <button\n//               key={item._id}\n//               onClick={() => {\n//                 handleClick(item._id);\n//               }}\n//               className=\"CategoryMenu-container-button p-5 m-5 \"\n//             >\n//               {item.name}\n//             </button>\n//           </Link>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n// export default CategoryMenu;\nimport React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from \"../../utils/actions\";\nimport { QUERY_CATEGORIES } from \"../../utils/queries\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport \"../../scss/components/CategoryMenu.scss\";\n\nfunction CategoryMenu() {\n  const [state, dispatch] = useStoreContext();\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData && categoryData.categories) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n\n      if (categoryData.categories.length > 0) {\n        categoryData.categories.forEach((category) => {\n          idbPromise(\"categories\", \"put\", category);\n        });\n      }\n    } else if (!loading) {\n      idbPromise(\"categories\", \"get\").then((categories) => {\n        if (categories && categories.length > 0) {\n          dispatch({\n            type: UPDATE_CATEGORIES,\n            categories: categories,\n          });\n        }\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id,\n    });\n  };\n\n  return (\n    <div>\n      <div className=\"CategoryMenu-container d-flex justify-content-center align-items-center m-5 hstack gap-5\">\n        {categories.map((item) => (\n          <Link to=\"/ProductList\" key={item._id}>\n            <button\n              key={item._id}\n              onClick={() => {\n                handleClick(item._id);\n              }}\n              className=\"CategoryMenu-container-button p-5 m-5 \"\n            >\n              {item.name}\n            </button>\n          </Link>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,eAAe,QAAQ,yBAAyB;AACzD,SACEC,iBAAiB,EACjBC,uBAAuB,QAClB,qBAAqB;AAC5B,SAASC,gBAAgB,QAAQ,qBAAqB;AACtD,SAASC,UAAU,QAAQ,qBAAqB;AAChD,OAAO,yCAAyC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,eAAe,CAAC,CAAC;EAC3C,MAAM;IAAEW;EAAW,CAAC,GAAGF,KAAK;EAE5B,MAAM;IAAEG,OAAO;IAAEC,IAAI,EAAEC;EAAa,CAAC,GAAGf,QAAQ,CAACI,gBAAgB,CAAC;EAElEN,SAAS,CAAC,MAAM;IACd,IAAIiB,YAAY,IAAIA,YAAY,CAACH,UAAU,EAAE;MAC3CD,QAAQ,CAAC;QACPK,IAAI,EAAEd,iBAAiB;QACvBU,UAAU,EAAEG,YAAY,CAACH;MAC3B,CAAC,CAAC;MAEF,IAAIG,YAAY,CAACH,UAAU,CAACK,MAAM,GAAG,CAAC,EAAE;QACtCF,YAAY,CAACH,UAAU,CAACM,OAAO,CAAEC,QAAQ,IAAK;UAC5Cd,UAAU,CAAC,YAAY,EAAE,KAAK,EAAEc,QAAQ,CAAC;QAC3C,CAAC,CAAC;MACJ;IACF,CAAC,MAAM,IAAI,CAACN,OAAO,EAAE;MACnBR,UAAU,CAAC,YAAY,EAAE,KAAK,CAAC,CAACe,IAAI,CAAER,UAAU,IAAK;QACnD,IAAIA,UAAU,IAAIA,UAAU,CAACK,MAAM,GAAG,CAAC,EAAE;UACvCN,QAAQ,CAAC;YACPK,IAAI,EAAEd,iBAAiB;YACvBU,UAAU,EAAEA;UACd,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACG,YAAY,EAAEF,OAAO,EAAEF,QAAQ,CAAC,CAAC;EAErC,MAAMU,WAAW,GAAIC,EAAE,IAAK;IAC1BX,QAAQ,CAAC;MACPK,IAAI,EAAEb,uBAAuB;MAC7BoB,eAAe,EAAED;IACnB,CAAC,CAAC;EACJ,CAAC;EAED,oBACEf,OAAA;IAAAiB,QAAA,eACEjB,OAAA;MAAKkB,SAAS,EAAC,0FAA0F;MAAAD,QAAA,EACtGZ,UAAU,CAACc,GAAG,CAAEC,IAAI,iBACnBpB,OAAA,CAACR,IAAI;QAAC6B,EAAE,EAAC,cAAc;QAAAJ,QAAA,eACrBjB,OAAA;UAEEsB,OAAO,EAAEA,CAAA,KAAM;YACbR,WAAW,CAACM,IAAI,CAACG,GAAG,CAAC;UACvB,CAAE;UACFL,SAAS,EAAC,wCAAwC;UAAAD,QAAA,EAEjDG,IAAI,CAACI;QAAI,GANLJ,IAAI,CAACG,GAAG;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOP;MAAC,GATkBR,IAAI,CAACG,GAAG;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAU/B,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC1B,EAAA,CAxDQD,YAAY;EAAA,QACOP,eAAe,EAGDD,QAAQ;AAAA;AAAAoC,EAAA,GAJzC5B,YAAY;AA0DrB,eAAeA,YAAY;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}