{"ast":null,"code":"var _jsxFileName = \"/Users/aminforout/Desktop/projects/project9/client/src/components/CategoryMenu/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from \"../../utils/actions\";\nimport { QUERY_CATEGORIES } from \"../../utils/queries\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport \"../../scss/components/CategoryMenu.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CategoryMenu() {\n  _s();\n  const [state, dispatch] = useStoreContext();\n  const {\n    categories\n  } = state;\n  const {\n    loading,\n    data: categoryData\n  } = useQuery(QUERY_CATEGORIES);\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories\n      });\n      categoryData.categories.forEach(category => {\n        idbPromise(\"categories\", \"put\", category);\n      });\n    } else if (!loading) {\n      idbPromise(\"categories\", \"get\").then(categories => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n  const handleClick = id => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CategoryMenu-container d-flex justify-content-center align-items-center  hstack gap-5\",\n      children: categories.map(item => /*#__PURE__*/_jsxDEV(Link, {\n        to: item.name === \"women\" ? \"/ProductListwomen\" : \"/ProductListmen\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            handleClick(item._id);\n          },\n          className: \"CategoryMenu-container-button p-5 m-5 fw-bold \",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, item._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(CategoryMenu, \"dVCQPHAWx2znearw0XIiXyA+Ei0=\", false, function () {\n  return [useStoreContext, useQuery];\n});\n_c = CategoryMenu;\nexport default CategoryMenu;\n\n///////////111111111111111//////////////////\n// import React, { useEffect } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import { useQuery } from \"@apollo/client\";\n// import { useStoreContext } from \"../../utils/GlobalState\";\n// import {\n//   UPDATE_CATEGORIES,\n//   UPDATE_CURRENT_CATEGORY,\n// } from \"../../utils/actions\";\n// import { QUERY_CATEGORIES } from \"../../utils/queries\";\n// import { idbPromise } from \"../../utils/helpers\";\n// import \"../../scss/components/CategoryMenu.scss\";\n// function CategoryMenu() {\n//   const [state, dispatch] = useStoreContext();\n\n//   const { categories } = state;\n\n//   const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n//   useEffect(() => {\n//     if (categoryData) {\n//       dispatch({\n//         type: UPDATE_CATEGORIES,\n//         categories: categoryData.categories,\n//       });\n//       categoryData.categories.forEach((category) => {\n//         idbPromise(\"categories\", \"put\", category);\n//       });\n//     } else if (!loading) {\n//       idbPromise(\"categories\", \"get\").then((categories) => {\n//         dispatch({\n//           type: UPDATE_CATEGORIES,\n//           categories: categories,\n//         });\n//       });\n//     }\n//   }, [categoryData, loading, dispatch]);\n\n//   const handleClick = (id) => {\n//     dispatch({\n//       type: UPDATE_CURRENT_CATEGORY,\n//       currentCategory: id,\n//     });\n//   };\n\n//   return (\n//     <div>\n//       <div className=\"CategoryMenu-container d-flex justify-content-center align-items-center m-5 hstack gap-5\">\n//         if(categories[0])=>\n//         {\n//           <Link to=\"/ProductListwomen\">\n//             <button\n//               key={item._id}\n//               onClick={() => {\n//                 handleClick(item._id);\n//               }}\n//               className=\"CategoryMenu-container-button p-5 m-5 \"\n//             >\n//               {item.name}\n//             </button>\n//           </Link>\n//         }\n//         else if(categories[1])=>\n//         {\n//           <Link to=\"/ProductListmen\">\n//             <button\n//               key={item._id}\n//               onClick={() => {\n//                 handleClick(item._id);\n//               }}\n//               className=\"CategoryMenu-container-button p-5 m-5 \"\n//             >\n//               {item.name}\n//             </button>\n//           </Link>\n//         }\n//         {/* {categories.map((item) => (\n//           <Link to=\"/ProductList\">\n//             <button\n//               key={item._id}\n//               onClick={() => {\n//                 handleClick(item._id);\n//               }}\n//               className=\"CategoryMenu-container-button p-5 m-5 \"\n//             >\n//               {item.name}\n//             </button>\n//           </Link>\n//         ))} */}\n//       </div>\n//     </div>\n//   );\n// }\n// export default CategoryMenu;\nvar _c;\n$RefreshReg$(_c, \"CategoryMenu\");","map":{"version":3,"names":["React","useEffect","Link","useQuery","useStoreContext","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","QUERY_CATEGORIES","idbPromise","jsxDEV","_jsxDEV","CategoryMenu","_s","state","dispatch","categories","loading","data","categoryData","type","forEach","category","then","handleClick","id","currentCategory","children","className","map","item","to","name","onClick","_id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aminforout/Desktop/projects/project9/client/src/components/CategoryMenu/index.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from \"../../utils/actions\";\nimport { QUERY_CATEGORIES } from \"../../utils/queries\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport \"../../scss/components/CategoryMenu.scss\";\n\nfunction CategoryMenu() {\n  const [state, dispatch] = useStoreContext();\n\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n      categoryData.categories.forEach((category) => {\n        idbPromise(\"categories\", \"put\", category);\n      });\n    } else if (!loading) {\n      idbPromise(\"categories\", \"get\").then((categories) => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories,\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id,\n    });\n  };\n\n  return (\n    <div>\n      <div className=\"CategoryMenu-container d-flex justify-content-center align-items-center  hstack gap-5\">\n        {categories.map((item) => (\n          <Link\n            to={item.name === \"women\" ? \"/ProductListwomen\" : \"/ProductListmen\"}\n            key={item._id}\n          >\n            <button\n              onClick={() => {\n                handleClick(item._id);\n              }}\n              className=\"CategoryMenu-container-button p-5 m-5 fw-bold \"\n            >\n              {item.name}\n            </button>\n          </Link>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n\n///////////111111111111111//////////////////\n// import React, { useEffect } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import { useQuery } from \"@apollo/client\";\n// import { useStoreContext } from \"../../utils/GlobalState\";\n// import {\n//   UPDATE_CATEGORIES,\n//   UPDATE_CURRENT_CATEGORY,\n// } from \"../../utils/actions\";\n// import { QUERY_CATEGORIES } from \"../../utils/queries\";\n// import { idbPromise } from \"../../utils/helpers\";\n// import \"../../scss/components/CategoryMenu.scss\";\n// function CategoryMenu() {\n//   const [state, dispatch] = useStoreContext();\n\n//   const { categories } = state;\n\n//   const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n//   useEffect(() => {\n//     if (categoryData) {\n//       dispatch({\n//         type: UPDATE_CATEGORIES,\n//         categories: categoryData.categories,\n//       });\n//       categoryData.categories.forEach((category) => {\n//         idbPromise(\"categories\", \"put\", category);\n//       });\n//     } else if (!loading) {\n//       idbPromise(\"categories\", \"get\").then((categories) => {\n//         dispatch({\n//           type: UPDATE_CATEGORIES,\n//           categories: categories,\n//         });\n//       });\n//     }\n//   }, [categoryData, loading, dispatch]);\n\n//   const handleClick = (id) => {\n//     dispatch({\n//       type: UPDATE_CURRENT_CATEGORY,\n//       currentCategory: id,\n//     });\n//   };\n\n//   return (\n//     <div>\n//       <div className=\"CategoryMenu-container d-flex justify-content-center align-items-center m-5 hstack gap-5\">\n//         if(categories[0])=>\n//         {\n//           <Link to=\"/ProductListwomen\">\n//             <button\n//               key={item._id}\n//               onClick={() => {\n//                 handleClick(item._id);\n//               }}\n//               className=\"CategoryMenu-container-button p-5 m-5 \"\n//             >\n//               {item.name}\n//             </button>\n//           </Link>\n//         }\n//         else if(categories[1])=>\n//         {\n//           <Link to=\"/ProductListmen\">\n//             <button\n//               key={item._id}\n//               onClick={() => {\n//                 handleClick(item._id);\n//               }}\n//               className=\"CategoryMenu-container-button p-5 m-5 \"\n//             >\n//               {item.name}\n//             </button>\n//           </Link>\n//         }\n//         {/* {categories.map((item) => (\n//           <Link to=\"/ProductList\">\n//             <button\n//               key={item._id}\n//               onClick={() => {\n//                 handleClick(item._id);\n//               }}\n//               className=\"CategoryMenu-container-button p-5 m-5 \"\n//             >\n//               {item.name}\n//             </button>\n//           </Link>\n//         ))} */}\n//       </div>\n//     </div>\n//   );\n// }\n// export default CategoryMenu;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}