{"ast":null,"code":"var _jsxFileName = \"/Users/aminforout/Desktop/projects/project5/client/src/pages/Category.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { useStoreContext } from \"../utils/GlobalState\";\nimport { QUERY_PRODUCTS } from \"../utils/queries\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { idbPromise } from \"../utils/helpers\";\n// const { id } = useParams();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Category() {\n  //   const [state, dispatch] = useStoreContext();\n  //   const [currentProduct, setCurrentProduct] = useState({});\n  //   const { loading, data } = useQuery(QUERY_PRODUCTS);\n  //   useEffect(() => {\n  //     // already in global store\n  //     if (products.length) {\n  //       setCurrentProduct(products.find((product) => product._id === id));\n  //     }\n  //     // retrieved from server\n  //     else if (data) {\n  //       dispatch({\n  //         type: UPDATE_PRODUCTS,\n  //         products: data.products,\n  //       });\n\n  //       data.products.forEach((product) => {\n  //         idbPromise(\"products\", \"put\", product);\n  //       });\n  //     }\n  //     // get cache from idb\n  //     else if (!loading) {\n  //       idbPromise(\"products\", \"get\").then((indexedProducts) => {\n  //         dispatch({\n  //           type: UPDATE_PRODUCTS,\n  //           products: indexedProducts,\n  //         });\n  //       });\n  //     }\n  //   }, [products, data, loading, dispatch, id]);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"\\u2190 Back to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"Category-header\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"Category-details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"Category-info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = Category;\nexport default Category;\nvar _c;\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"names":["React","useEffect","useState","useQuery","useStoreContext","QUERY_PRODUCTS","Link","useParams","idbPromise","jsxDEV","_jsxDEV","Fragment","_Fragment","Category","children","to","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/aminforout/Desktop/projects/project5/client/src/pages/Category.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { useStoreContext } from \"../utils/GlobalState\";\nimport { QUERY_PRODUCTS } from \"../utils/queries\";\n\nimport { Link, useParams } from \"react-router-dom\";\nimport { idbPromise } from \"../utils/helpers\";\n// const { id } = useParams();\nfunction Category() {\n  //   const [state, dispatch] = useStoreContext();\n  //   const [currentProduct, setCurrentProduct] = useState({});\n  //   const { loading, data } = useQuery(QUERY_PRODUCTS);\n  //   useEffect(() => {\n  //     // already in global store\n  //     if (products.length) {\n  //       setCurrentProduct(products.find((product) => product._id === id));\n  //     }\n  //     // retrieved from server\n  //     else if (data) {\n  //       dispatch({\n  //         type: UPDATE_PRODUCTS,\n  //         products: data.products,\n  //       });\n\n  //       data.products.forEach((product) => {\n  //         idbPromise(\"products\", \"put\", product);\n  //       });\n  //     }\n  //     // get cache from idb\n  //     else if (!loading) {\n  //       idbPromise(\"products\", \"get\").then((indexedProducts) => {\n  //         dispatch({\n  //           type: UPDATE_PRODUCTS,\n  //           products: indexedProducts,\n  //         });\n  //       });\n  //     }\n  //   }, [products, data, loading, dispatch, id]);\n\n  return (\n    <>\n      <div>\n        <Link to=\"/\">‚Üê Back to Home</Link>\n        <section className=\"Category-header\"></section>\n        <section className=\"Category-details\"></section>\n        <section className=\"Category-info\"></section>\n      </div>\n    </>\n  );\n}\nexport default Category;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,eAAe,QAAQ,sBAAsB;AACtD,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,SAASC,IAAI,EAAEC,SAAS,QAAQ,kBAAkB;AAClD,SAASC,UAAU,QAAQ,kBAAkB;AAC7C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,SAASC,QAAQA,CAAA,EAAG;EAClB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEH,OAAA,CAAAE,SAAA;IAAAE,QAAA,eACEJ,OAAA;MAAAI,QAAA,gBACEJ,OAAA,CAACJ,IAAI;QAACS,EAAE,EAAC,GAAG;QAAAD,QAAA,EAAC;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAClCT,OAAA;QAASU,SAAS,EAAC;MAAiB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU,CAAC,eAC/CT,OAAA;QAASU,SAAS,EAAC;MAAkB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU,CAAC,eAChDT,OAAA;QAASU,SAAS,EAAC;MAAe;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C;EAAC,gBACN,CAAC;AAEP;AAACE,EAAA,GAzCQR,QAAQ;AA0CjB,eAAeA,QAAQ;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}