{"ast":null,"code":"var _jsxFileName = \"/Users/aminforout/Desktop/projects/project9/client/src/components/ProductItemMen/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport \"../../scss/components/ProductItemMen.scss\";\nimport { UPDATE_MEN_PROUDUCTS, UPDATE_CURRENT_MEN_PROUDUCTS } from \"../../utils/actions\";\nimport { QUERY_MENCATEGORIES } from \"../../utils/queries\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProductItem() {\n  _s();\n  const [state, dispatch] = useStoreContext();\n  const {\n    menProductItems\n  } = state;\n  const {\n    loading,\n    data: menProductItemsData\n  } = useQuery(QUERY_MENCATEGORIES);\n  useEffect(() => {\n    if (menProductItemsData) {\n      dispatch({\n        type: UPDATE_MEN_PROUDUCTS,\n        menProductItems: menProductItemsData.menProductItems\n      });\n    } else if (!loading) {\n      idbPromise(\"products\", \"get\").then(menProductItems => {\n        dispatch({\n          type: UPDATE_MEN_PROUDUCTS,\n          menProductItems: menProductItems\n        });\n      });\n    }\n  }, [menProductItemsData, loading, dispatch]);\n  const handleClick = id => {\n    dispatch({\n      type: UPDATE_CURRENT_MEN_PROUDUCTS,\n      currentmenProductItems: id\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ProductItem-container d-flex justify-content-center align-items-center m-5 hstack gap-5\",\n      children: menProductItems.map(item => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/MenProductDetails/${item.name}`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            handleClick(item._id);\n          },\n          className: \"ProductItemMen-container-button p-5 m-5 \",\n          children: item.name\n        }, item._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, item._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(ProductItem, \"Eg/bOwTBN6VmLo5DvRpwPVXDTNI=\", false, function () {\n  return [useStoreContext, useQuery];\n});\n_c = ProductItem;\nexport default ProductItem;\n// import React, { useEffect } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import { useQuery } from \"@apollo/client\";\n// import { useStoreContext } from \"../../utils/GlobalState\";\n// import {\n//   UPDATE_WOMEN_PROUDUCTS,\n//   UPDATE_CURRENT_WOMEN_PROUDUCTS,\n// } from \"../../utils/actions\";\n// import { QUERY_WOMENCATEGORIES } from \"../../utils/queries\";\n// import { idbPromise } from \"../../utils/helpers\";\n\n// function ProductItem() {\n//   const [state, dispatch] = useStoreContext();\n\n//   const { womenProductItems } = state;\n\n//   const { loading, data: womenProductItemsData } = useQuery(\n//     QUERY_WOMENCATEGORIES\n//   );\n\n//   useEffect(() => {\n//     if (womenProductItemsData) {\n//       // Assuming womenProductItemsData contains an array of products\n//       dispatch({\n//         type: UPDATE_WOMEN_PROUDUCTS,\n//         products: womenProductItemsData.womenProductItems, // Access the correct property\n//       });\n\n//       // Seed the data into IndexedDB\n//       womenProductItemsData.womenProductItems.forEach((product) => {\n//         idbPromise(\"products\", \"put\", product);\n//       });\n//     } else if (!loading) {\n//       // If data is not available, retrieve it from IndexedDB\n//       idbPromise(\"products\", \"get\").then((products) => {\n//         dispatch({\n//           type: UPDATE_WOMEN_PROUDUCTS,\n//           products: products,\n//         });\n//       });\n//     }\n//   }, [womenProductItemsData, loading, dispatch]);\n\n//   const handleClick = (id) => {\n//     dispatch({\n//       type: UPDATE_CURRENT_WOMEN_PROUDUCTS,\n//       currentproduct: id,\n//     });\n//   };\n\n//   return (\n//     <div>\n//       <div className=\"ProductItem-container d-flex justify-content-center align-items-center m-5 hstack gap-5\">\n//         {womenProductItems.map((item) => (\n//           <Link to=\"/ProductDetails\" key={item._id}>\n//             <button\n//               onClick={() => {\n//                 handleClick(item._id);\n//               }}\n//               className=\"ProductItem-container-button p-5 m-5 \"\n//             >\n//               {item.name}\n//             </button>\n//           </Link>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n// export default ProductItem;\nvar _c;\n$RefreshReg$(_c, \"ProductItem\");","map":{"version":3,"names":["React","useEffect","Link","useQuery","useStoreContext","UPDATE_MEN_PROUDUCTS","UPDATE_CURRENT_MEN_PROUDUCTS","QUERY_MENCATEGORIES","idbPromise","jsxDEV","_jsxDEV","ProductItem","_s","state","dispatch","menProductItems","loading","data","menProductItemsData","type","then","handleClick","id","currentmenProductItems","children","className","map","item","to","name","onClick","_id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aminforout/Desktop/projects/project9/client/src/components/ProductItemMen/index.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport \"../../scss/components/ProductItemMen.scss\";\nimport {\n  UPDATE_MEN_PROUDUCTS,\n  UPDATE_CURRENT_MEN_PROUDUCTS,\n} from \"../../utils/actions\";\nimport { QUERY_MENCATEGORIES } from \"../../utils/queries\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction ProductItem() {\n  const [state, dispatch] = useStoreContext();\n\n  const { menProductItems } = state;\n\n  const { loading, data: menProductItemsData } = useQuery(QUERY_MENCATEGORIES);\n\n  useEffect(() => {\n    if (menProductItemsData) {\n      dispatch({\n        type: UPDATE_MEN_PROUDUCTS,\n        menProductItems: menProductItemsData.menProductItems,\n      });\n    } else if (!loading) {\n      idbPromise(\"products\", \"get\").then((menProductItems) => {\n        dispatch({\n          type: UPDATE_MEN_PROUDUCTS,\n          menProductItems: menProductItems,\n        });\n      });\n    }\n  }, [menProductItemsData, loading, dispatch]);\n\n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_MEN_PROUDUCTS,\n      currentmenProductItems: id,\n    });\n  };\n\n  return (\n    <div>\n      <div className=\"ProductItem-container d-flex justify-content-center align-items-center m-5 hstack gap-5\">\n        {menProductItems.map((item) => (\n          <Link to={`/MenProductDetails/${item.name}`} key={item._id}>\n            <button\n              key={item._id}\n              onClick={() => {\n                handleClick(item._id);\n              }}\n              className=\"ProductItemMen-container-button p-5 m-5 \"\n            >\n              {item.name}\n            </button>\n          </Link>\n        ))}\n      </div>\n    </div>\n  );\n}\nexport default ProductItem;\n// import React, { useEffect } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import { useQuery } from \"@apollo/client\";\n// import { useStoreContext } from \"../../utils/GlobalState\";\n// import {\n//   UPDATE_WOMEN_PROUDUCTS,\n//   UPDATE_CURRENT_WOMEN_PROUDUCTS,\n// } from \"../../utils/actions\";\n// import { QUERY_WOMENCATEGORIES } from \"../../utils/queries\";\n// import { idbPromise } from \"../../utils/helpers\";\n\n// function ProductItem() {\n//   const [state, dispatch] = useStoreContext();\n\n//   const { womenProductItems } = state;\n\n//   const { loading, data: womenProductItemsData } = useQuery(\n//     QUERY_WOMENCATEGORIES\n//   );\n\n//   useEffect(() => {\n//     if (womenProductItemsData) {\n//       // Assuming womenProductItemsData contains an array of products\n//       dispatch({\n//         type: UPDATE_WOMEN_PROUDUCTS,\n//         products: womenProductItemsData.womenProductItems, // Access the correct property\n//       });\n\n//       // Seed the data into IndexedDB\n//       womenProductItemsData.womenProductItems.forEach((product) => {\n//         idbPromise(\"products\", \"put\", product);\n//       });\n//     } else if (!loading) {\n//       // If data is not available, retrieve it from IndexedDB\n//       idbPromise(\"products\", \"get\").then((products) => {\n//         dispatch({\n//           type: UPDATE_WOMEN_PROUDUCTS,\n//           products: products,\n//         });\n//       });\n//     }\n//   }, [womenProductItemsData, loading, dispatch]);\n\n//   const handleClick = (id) => {\n//     dispatch({\n//       type: UPDATE_CURRENT_WOMEN_PROUDUCTS,\n//       currentproduct: id,\n//     });\n//   };\n\n//   return (\n//     <div>\n//       <div className=\"ProductItem-container d-flex justify-content-center align-items-center m-5 hstack gap-5\">\n//         {womenProductItems.map((item) => (\n//           <Link to=\"/ProductDetails\" key={item._id}>\n//             <button\n//               onClick={() => {\n//                 handleClick(item._id);\n//               }}\n//               className=\"ProductItem-container-button p-5 m-5 \"\n//             >\n//               {item.name}\n//             </button>\n//           </Link>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n// export default ProductItem;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}